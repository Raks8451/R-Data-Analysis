plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(6.7,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","blue"),pch=0.4)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width)
points(Iris_demo$Petal.Length,Iris_demo$Petal.Width,col="blue")
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(6.7,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","blue"),pch=0.4)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","blue"),pch=0.4)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=0.4)
plot(Iris_demo$Sepal.Length,col=Iris_demo$Species)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,type="p",col=Iris_demo$Species,main = "Demo Plot in Iris Dataset",sub="Plot example",xlab="Length",ylab = "width")
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=1.2)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=0.4
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=0.4
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=0.4)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,type="l",col=Iris_demo$Species,main = "Demo Plot in Iris Dataset",sub="Plot example",xlab="Length",ylab = "width")
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,type="b",col=Iris_demo$Species,main = "Demo Plot in Iris Dataset",sub="Plot example",xlab="Length",ylab = "width")
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,type="p",col=Iris_demo$Species,main = "Demo Plot in Iris Dataset",sub="Plot example",xlab="Length",ylab = "width")
?plot
?hist
hist(Iris_demo$Sepal.Width)
max(Iris_demo$Sepal.Width)
min(Iris_demo$Sepal.Width)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,3,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,2,3,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "blue",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",ylab="frequency",border = "blue",col = "blue",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "blue",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,1.5,2,3,3.5,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,2,3,4,5,6))
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "blue",col = "green",breaks = c(1,2,3,4,5,6),freq = F)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",breaks = c(1,2,3,4,5,6),freq = F)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",breaks = 1:6,freq = F)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",breaks = c(1:6),freq = F)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",breaks = 5,freq = F)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 50)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 200)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 2000)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 50)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 20)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 50)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 100)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 200)
hist(Iris_demo$Sepal.Width, main = "Demo histogram in IRIS dataset",xlab = "width",border = "black",col = "green",density = 2000)
boxplot(Iris_demo$Sepal.Length)
boxplot(Iris_demo)
boxplot(Iris_demo,las=2)
boxplot(Iris_demo,las=2,names = c("S_L","S_w","P_L","P_W","species"))
boxplot(Iris_demo,las=1)
boxplot(Iris_demo,las=3)
boxplot(Iris_demo,las=1)
boxplot(Iris_demo,las=2)
boxplot(Iris_demo,las=3)
boxplot(Iris_demo,las=3,names = c("S_L","S_w","P_L","P_W","species"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"))
boxplot(Iris_demo,las=2,names = c("S_L","S_w","P_L","P_W","species"))
boxplot(Iris_demo,las=3,names = c("S_L","S_w","P_L","P_W","species"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","royalblue2"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","orange"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","melange"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","violet"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","babypink"))
boxplot(Iris_demo,las=1,names = c("S_L","S_w","P_L","P_W","species"),col = c("red","green","blue","black","pink"))
outlier <- boxplot(Iris_demo$Sepal.Width)
outlier
outlier <- boxplot(Iris_demo$Sepal.Width)
outlier1 <- boxplot(Iris_demo$Sepal.Width,plot = F)$out
outlier1
boxplot(Iris_demo$Petal.Length~Iris_demo$Species,xlab="Species type",ylab="petal length",main="Iris data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=F)
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=T)
boxplot(Iris_demo$Petal.Length,Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=F)
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
boxplot(Iris_demo$Petal.Length,Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=F)
boxplot(Iris_demo$Petal.Length,Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=F)
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"))
x <- boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=T)
x
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=T,horizontal = T)
boxplot(Iris_demo$Petal.Length ~ Iris_demo$Species,xlab="Species Type",ylab="petal length",main="Iris Data",col=c("red","green","blue"),notch=F,horizontal=T)
mytable <- table(iris$Species)
mytable <- table(iris$Species)
mytable
pie(mytable,labels = c("setosa","versicolo","virginica"))
str(iris)
pie(mytable,labels = round(100*mytable/sum(mytable),1))
pie(mytable,labels = round(100*mytable/sum(mytable),2))
pie(mytable,labels = round(100*mytable/sum(mytable),10))
pie(mytable,labels = round(100*mytable/sum(mytable),1))
pie(mytable,labels = round(100*mytable/sum(mytable),1),col = c("red","green","blue"))
legend("topright",c("setosa","versivolor","virginica"),cex = .5,fill = c("red","green","blue"))
legend("topright",c("setosa","versivolor","virginica"),cex = 1.5,fill = c("red","green","blue"))
legend("topright",c("setosa","versivolor","virginica"),cex = 1.5)
legend("topright",c("setosa","versivolor","virginica"),cex = 1.5,fill = c("red","green","blue"))
mytable <- table(iris$Species)
mytable
pie(mytable,labels = Iris_demo$Species)
pie(mytable,labels = Iris_demo$Species)
?ggplot
?ggplot2
mytable <- table(iris$Species)
mytable
pie(mytable,labels =c("setosa","versicolo","virginica"))
pie(mytable,labels = Iris_demo$Species)
str(iris)
pie(mytable,labels = round(100*mytable/sum(mytable),1))
pie(mytable,labels = round(100*mytable/sum(mytable),1),col = c("red","green","blue"))
pie(mytable,labels = round(100*mytable/sum(mytable),1),col = c("red","green","blue"),density=20)
pie(mytable,labels = round(100*mytable/sum(mytable),1),col = c("red","green","blue"),density=50)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
help.search("geom_",package = "ggplot2")
attach(mtcars)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
attach(mtcars)
library(ggplot2)
ggplot(data = mtcars,aes(x=cyl,y=mpg))+geom_point()
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg))+geom_point()
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg))+ geom_point(shape=1,size=2)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg))+ geom_point(shape=2,size=2)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg))+ geom_point(shape=3,size=2)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point()
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point(shape=1,size=2)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point()
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point(shape=2)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point(shape=1)
ggplot(data = mtcars,aes(x=factor(cyl),y=mpg,size=hp)) + geom_point(shape=3)
ggplot(data = mtcars,aes(x=(cyl),y=mpg,size=hp)) + geom_point(shape=3)
?factor
ggplot(data = mtcars,aes(x=wt,y=mpg,col=hp,size=disp))+geom_point()
ggplot(data = mtcars,aes(x=wt,y=mpg))+geom_text(aes(label=cyl))
View(mtcars)
ggplot(data = mtcars,aes(x=wt,y=mpg))+geom_text(aes(label=gear))
ggplot(data = mtcars,aes(x=wt,y=mpg))+geom_text(aes(label=cyl))
ggplot(data = mtcars,aes(x=wt,y=mpg,size=cyl))+geom_text(aes(label=cyl))
ggplot(data = mtcars,aes(x=wt,y=mpg,size=gear))+geom_text(aes(label=cyl))
ggplot(data = mtcars,aes(x=wt,y=mpg))+geom_point()+geom_line(aes(y=qsec))
install.packages("reshape2")
library(reshape2)
View(tips)
attach(tips)
plot(tips$total_bill,tips$tip)
plot(tips$total_bill,tips$tip,col="blue")
plot(tips$total_bill,tips$tip,size=3)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(size=3)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip,size=3))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(size=3)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(size=3)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip,col="Blue"))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_col("blue")
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(aes(col="blue"))
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_col(blue)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(color="blue")
ggplot(data = tips,aes(x=total_bill,y=tip,size=size))+geom_point()
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(size=3)
ggplot(data = tips,aes(x=total_bill,y=tip))+geom_point(color="blue",size=3)
ggplot(data = tips,aes(x=total_bill,y=tip,size=size))+geom_point()
install.packages("diamonds")
View(diamonds)
attach(diamonds)
str(diamonds)
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()+ geom_smooth()
ggplot(data = diamonds,aes(x=carat,y=price))+ geom_smooth()
temp <- ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_smooth()
temp
temp <- ggplot(data = diamonds,aes(x=carat,y=price,col=depth))+geom_smooth()
temp
temp <- ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_smooth()
temp
temp+geom_text(data=diamonds[diamonds$carat])
minmax = function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
a = c( 10, 20, 30, 40, 50)
minmax(a)
attach(iris)
Iris_demo <- iris
View(Iris_demo)
str(Iris_demo)
?plot
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width)
points(Iris_demo$Petal.Length,Iris_demo$Petal.Width,col="blue")
cor(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,col=Iris_demo$Species)
legend(7.0,4.5,legend=c("setosa","versicolor","virginica"),col=c("black","red","green"),pch=0.4)
plot(Iris_demo$Sepal.Length,col=Iris_demo$Species)
plot(Iris_demo$Sepal.Length,Iris_demo$Sepal.Width,type="p",col=Iris_demo$Species,main = "Demo Plot in Iris Dataset",sub="Plot example",xlab="Length",ylab = "width")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.4")
help.search("geom_",package = "ggplot2")
attach(mtcars)
attach(mtcars)
View(mtcars)
attach(mtcars)
ggplot(data = mtcars,aes(x=cyl,y=mpg))+geom_point()
View(diamonds)
attach(diamonds)
str(diamonds)
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()+ geom_smooth()
ggplot(data = diamonds,aes(x=carat,y=price))+ geom_smooth()
temp <- ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_smooth()
temp
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()+ gam()
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()+ geom_smooth()
View(diamonds)
attach(diamonds)
str(diamonds)
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()
ggplot(data = diamonds,aes(x=carat,y=price))+geom_point()+ geom_smooth()
ggplot(data = diamonds,aes(x=carat,y=price))+ geom_smooth()
ggplot(data = diamonds,aes(x=carat,y=price))+ geom_smooth()
temp <- ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_smooth()
temp
install.packages("directables")
install.packages("directlables")
install.packages("directlabels")
library(directlabels)
direct.label(temp,list(last.points,hjust=.5,vjust=.5))
ggplot(date=diamonds,aes(x=carat,y=price,col=clarity))+geom_point()
ggplot(date=diamonds,aes(x=carat,y=price,col=clarity))+geom_point()
ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_point()
ggplot(data = diamonds,aes(a=carat,y=price,col=clarity))+geom_point(alpha=0.4)
ggplot(data = diamonds,aes(xa=carat,y=price,col=clarity))+geom_point(alpha=0.4)
ggplot(data = diamonds,aes(xa=carat,y=price,col=clarity))+geom_point(alpha=0.4)
ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_point(alpha=0.4)
ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_point(alpha=0.7)
ggplot(data = diamonds,aes(x=carat,y=price,col=clarity))+geom_point(alpha=0.4)
diamond_plot <- ggplot(diamonds,aes(x=carat,y=price))
diamond_plot+geom_smooth()
diamond_plot+geom_histogram()
cyl_am <- ggplot(mtcars,aes(x=factor(cyl)))
cyl_am+geom_bar()
attach(mtcars)
View(mtcars)
attach(diamonds)
View(diamonds)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.4")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.4")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
attach(diamonds)
View(diamonds)
cyl_am <- cyl_am+aes(fill=factor(am))
cyl_am+geom_bar()
ggplot(mtcars,aes(x=cyl,fill=am))+geom_bar(position="stack")
cyl_am+geom_bar(position = "fill")
cyl_am+geom_bar(position = "dodge")
ggplot(mtcars,aes(x=cyl,fill=(am)))+geom_bar(position="stack")
ggplot(mtcars,aes(x=cyl,fill=factor(am)))+geom_bar(position="stack")
ggplot(mtcars,aes(x=cyl,fill=factor(am)))+geom_bar()
ggplot(mtcars,aes(x=cyl,fill=factor(am)))+geom_bar(position = "stack")
ggplot(mtcars,aes(x=factor(cyl),fill=factor(am)))+geom_bar(position = "stack")
ggplot(mtcars,aes(x=factor(cyl),fill=factor(am)))+geom_bar()
ggplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4)
ggplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 8)
ggplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4)
mycolor="blue"
ggplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4)+mycolor="blue"
gplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4,fill=mycolo)
gplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4,fill=mycolor)
ggplot(mtcars,aes(x=mpg)) + geom_histogram(binwidth = 4,fill=mycolor)
attach(economics)
str(economics)
View(economics)
head(economics)
ggplot(economics,aes(x=data,y=unemploy))+geom_line()
ggplot(economics,aes(x=data,y=unemploy))+geom_line()
ggplot(economics,aes(x=date,y=unemploy))+geom_line()
ggplot(economics,aes(x=factor(date),y=unemploy))+geom_line()
ggplot(economics,aes(x=date,y=unemploy))+geom_line()
ggplot(economics,aes(x=date,y=unemploy/pop))+geom_line()
ggplot(economics,aes(x=date,y=unemploy/pop))+geom_histogram()
ggplot(economics,aes(x=date,y=unemploy/pop))+geom_line()
ggplot(economics,aes(x=date,y=unemploy/pop,col=psavert))+geom_line()
ggplot(economics,aes(x=date,y=unemploy/pop,col=psavert))+geom_line()+geom_point()
ggplot(economics,aes(x=date,y=unemploy/pop,shape=psavert))+geom_line()+geom_point()
ggplot(economics,aes(x=date,y=unemploy/pop,col=psavert))+geom_line()+geom_point()
temp <- ggplot(economics,aes(x=date,y=pop)) + theme(legend.position = "top")+geom_point(aes(color=unemploy))
temp
temp+scale_color_continuous(name="",breaks=c(3000,10000,15000),labels=c("3000","10000","15000"))
temp+scale_color_continuous(name="",breaks=c(3000,10000,15000),labels=c("3000","10000","15000"),low="blue",high="red")
library(reshape2)
attach(tips)
View(tips)
temp1 <- ggplot(tips,aes(x=total_bill,y=tip))
temp1+geom_line(aes(color=size))
temp1+geom_line()+facet_wrap(~size,ncol=6)
temp1+geom_line()+facet_wrap(~size,ncol=5)
temp1+geom_line()+facet_wrap(~size,ncol=6)
temp1+geom_line()+facet_wrap(~size,ncol=4)
temp1+geom_line()+facet_wrap(size,ncol=4)
temp1+geom_line()+facet_wrap(~size,ncol=4)
setwd("D:\\Rakshith\\Documents\\R programming\\NEW\\ml-100k\\ml-100k)
setwd("D:\\Rakshith\\Documents\\R programming\\NEW\\ml-100k\\ml-100k")
setwd("D:\\Rakshith\\Documents\\R programming\\NEW\\ml-100k\\ml-100k")
users=read.csv("u.user",sep="|",header = F)
View(users)
colnames(users) <- c("user_id","age","gender","occupation","zip-code")
View(users)
rate <- read.csv("u.data",sep = "\t",header = F)
View(rate)
rating <- read.csv("u.data",sep = "\t",header = F)
View(rating)
names(rating) <- c("user_id","movie_id","rating","unix_timestamp")
View(rating)
movies<- read.csv("u.item",sep = "|",header = F)
View(movies)
movie <- movies(1:5)
movie <- col(movies,1:5)
movie <- movies[,1:5]
movies <- movies[,1:5]
names(movies) <- c("movie-id","title","release_date","video_release_date","imdb_url")
movies<- col(movies[1:5])
movies<- col(movies[1:5])
View(movies)
movies <- movies[,1:5]
View(movies)
movies <- movies[,1:5]
View(movies)
movie <- movies[,1:5]
View(movie)
movies<- read.csv("u.item",sep = "|",header = F)
View(movies)
movie <- movies[,1:5]
View(movie)
names(movies) <- c("movie-id","title","release_date","video_release_date","imdb_url")
movies <- movies[,1:5]
View(movies)
names(movies) <- c("movie-id","title","release_date","video_release_date","imdb_url")
MV_RATINGS = merge(ratings,movies,by="movie_id")
MV_RATINGS = merge(rating,movies,by="movie_id")
MV_RATINGS = merge(rating,movies,by="movie_id")
names(movies) <- c("movie_id","title","release_date","video_release_date","imdb_url")
MV_RATINGS = merge(rating,movies,by="movie_id")
MV_RATINGS_USR <- merge(users,rating,by="user_id")
MV_RATINGS_USR <- merge(users,MV_RATINGS,by="user_id")
View(MV_RATINGS_USR)
MV_RATINGS_USR <- merge(users,rating,by="user_id")
View(MV_RATINGS_USR)
MV_RATINGS_USR <- merge(users,MV_RATINGS,by="user_id")
ls()
rm("movies","rating","users")
ls()
str(MV_RATINGS_USR)
MV_RATINGS_USR$dummy=1
View(MV_RATINGS_USR)
MV_RATINGS_USR$dummy
View(MV_RATINGS_USR)
unique(MV_RATINGS_USR$title)
table(unique(MV_RATINGS_USR$title))
tab1 <- table(MV_RATINGS_USR$title)
tab1
tab1 <- table(MV_RATINGS_USR$title)
tab1
tab <- as.data.frame(tab1)
tab
View(tab)
tab <- aggregate(MV_RATINGS_USR$dummy,by=list(unique,values=MV_RATINGS_USR,FUN=sum))
tab <- aggregate(MV_RATINGS_USR$dummy,by=list(unique,values=MV_RATINGS_USR$title, FUN=sum))
tab <- aggregate(MV_RATINGS_USR$dummy,by=list(unique.values=MV_RATINGS_USR$title, FUN=sum))
tab <- aggregate(MV_RATINGS_USR$dummy,by=list(unique.values=MV_RATINGS_USR$title), FUN=sum)
tab
View(tab)
tab1 <- table(MV_RATINGS_USR$title)
tab1
tab <- as.data.frame(tab1)
tab
tab <- tab[order(tab$Freq,desc=T),]
tab <- tab[order(tab$Freq,decreasing = T),]
View(tab)
tab(order(tab$Freq,decreasing = T),)
mean(MV_RATINGS_USR$rating,by="title")
tab2 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$title),FUN=mean)
View(tab2)
tab3 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$gender),FUN=mean)
View(tab3)
tab2 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$title),FUN=mean)
View(tab2)
tab4
tab4 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$occupation),FUN=mean)
tab4
View(tab4)
tab4<- tab4[order(tab4$x,decreasing = T),]
View(tab4)
movies_num_avg_rating=merge(tab,tab2,by.y="Group.1",by.x="Var1")
View(movies_num_avg_rating)
names(movies_num_avg_rating) <- c("movie_name","total_rating","avg_rating")
View(movies_num_avg_rating)
movies_num_avg_rating=merge(tab,tab2,by.x="Group.1",by.y="Var1")
movies_num_avg_rating=merge(tab,tab2,by.y="Group.1",by.x="Var1")
View(movies_num_avg_rating)
movies_num_avg_rating=merge(tab,tab2,by.x="Var1",by.y="Group.1")
View(movies_num_avg_rating)
temp1+geom_line()+facet_wrap(~size,ncol=4)
temp1+geom_line()+facet_wrap(~size,ncol=6)
movies_num_avg_rating <- movies_num_avg_rating[order(movies_num_avg_rating$Freq,decreasing = T),]
View(movies_num_avg_rating)
movies_num_avg_rating <- movies_num_avg_rating[order(movies_num_avg_rating$Freq,decreasing = F),]
View(movies_num_avg_rating)
movies_num_avg_rating <- movies_num_avg_rating[order(movies_num_avg_rating$x,decreasing = F),]
View(movies_num_avg_rating)
movies_num_avg_rating <- movies_num_avg_rating[order(movies_num_avg_rating$x,decreasing = T),]
View(movies_num_avg_rating)
names(movies_num_avg_rating) <- c("movie_name","total_rating","avg_rating")
View(movies_num_avg_rating)
movies_num_avg_rating=merge(tab,tab2,by.x="Var1",by.y="Group.1")
View(movies_num_avg_rating)
names(movies_num_avg_rating) <- c("movie_name","total_rating","avg_rating")
View(movies_num_avg_rating)
names(movies_num_avg_rating) <- c("movie_name","Freq","avg_rating")
View(movies_num_avg_rating)
library(ggplot2)
ggplot(movies_num_avg_rating,aes(avg_rating))+geom_histogram(binwidth=0.5)
ggplot(movies_num_avg_rating$avg_rating+geom_histogram(binwidth=0.5)
ggplot(movies_num_avg_rating,aes(x=avg_rating))+geom_histogram(binwidth=0.5)
ggplot(movies_num_avg_rating,aes(x=avg_rating))+geom_histogram(binwidth=0.5)
ggplot(movies_num_avg_rating,aes(Freq,avg_rating))+geom_point()
ggplot(movies_num_avg_rating,aes(Freq,avg_rating))+geom_point()+geom_smooth()
names(MV_RATINGS_USR)
MV_RATINGS_USR$year
View(MV_RATINGS_USR)
MV_RATINGS_USR$year=as.numeric(substr(MV_RATINGS_USR$release_date,8,11))
head(MV_RATINGS_USR$year)
View(MV_RATINGS_USR)
tab5 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$year),FUN=mean)
View(tab5)
tab5=tab5[-1]
View(tab5)
tab5=tab5[-1,]
View(tab5)
tab5 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$year),FUN=mean)
View(tab5)
tab5 <- tab5[-1]
View(tab5)
tab5 <- tab5[-1,]
View(tab5)
tab5 <- tab5[,-1]
View(tab5)
tab5 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$year),FUN=mean)
View(tab5)
tab5 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$year),FUN=mean)
View(tab5)
tab5 <- tab5[-1,]
View(tab5)
tab5 <- aggregate(MV_RATINGS_USR$rating,by=list(MV_RATINGS_USR$year),FUN=mean)
View(tab5)
tab5<- tab5$Group.1(1971,)
tab5$Group.1(971,)<-tab5$Group.1(1971,)
setwd("D:\\Rakshith\\Documents\\R programming\\R exercise data")
census <- read.csv("income_Census.csv",header=F)
View(census)
names(census)<- c("age","industrycode","education","educationnum","maritalstatus","relationship","race","gender","capitalgain","capitalloss","hoursperweek","GT50K")
str(census)
sum(duplicated(census))
df <- unique(census)
df
View(df)
sum(duplicated(df))
df1<- census[!duplicated(census)]
df1<- census[!duplicated(census),]
sum(duplicated(df1))
colnames(census)[1] <- "AGE"
colnames(census)[c(1,2,3)] <- c("AGE","IndustryCode","Education")
str(census)
census$educationnum <- as.factor(census$educationnum)
View(census)
str(census)
as.Date('1/15/2001',format='%m/%d/%Y')
as.Date('April 26 2001',format='%B %d %Y')
as.Date('22Jun01',format='%d%b%y')
format(as.Date('1/13/99',format='%m/%d/%y'),'%d-%m-%Y')
